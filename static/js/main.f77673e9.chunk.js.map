{"version":3,"sources":["components/Form/Form.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Form","imageSize","setImageSize","frameSize","setFrameSize","step","setStep","animationDuration","setAnimationDuration","infinity","setInfiity","className","htmlFor","type","id","value","onChange","event","target","min","max","checked","Carousel","images","carouselSize","lastItem","length","useState","moveItems","setMoveItems","useEffect","disabledNext","disabledPrev","style","width","height","transition","map","image","transform","src","alt","cn","onClick","prevMoveRight","Math","remainingItems","App","itemWidth","setItemWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f77673e9.chunk.js","sourcesContent":["import React from 'react';\nimport './Form.scss';\n\ninterface Props {\n  imageSize: number;\n  setImageSize: (imageSize: number) => void;\n  frameSize: number;\n  setFrameSize: (frameSize: number) => void;\n  step: number;\n  setStep: (step: number) => void;\n  animationDuration: number;\n  setAnimationDuration: (animationDuration: number) => void;\n  infinity: boolean;\n  setInfiity: (infinity: boolean) => void;\n\n}\n\nexport const Form: React.FC<Props> = ({\n  imageSize,\n  setImageSize,\n  frameSize,\n  setFrameSize,\n  step,\n  setStep,\n  animationDuration,\n  setAnimationDuration,\n  infinity,\n  setInfiity,\n}) => {\n  const handleCheckboxChange = () => {\n    setInfiity(!infinity);\n  };\n\n  return (\n    <div className=\"form\">\n      <div className=\"form__block\">\n        <label\n          htmlFor=\"itemSize\"\n          className=\"form__block-lable\"\n        >\n          Image size\n        </label>\n\n        <input\n          className=\"form__block-input\"\n          type=\"number\"\n          id=\"itemSize\"\n          value={imageSize}\n          onChange={(event) => setImageSize(+event.target.value)}\n          step={10}\n          min={10}\n        />\n      </div>\n\n      <div className=\"form__block\">\n        <label\n          htmlFor=\"carouselSize\"\n          className=\"form__block-lable\"\n        >\n          Frame size\n        </label>\n\n        <input\n          className=\"form__block-input\"\n          type=\"number\"\n          id=\"carouselSize\"\n          value={frameSize}\n          onChange={(event) => setFrameSize(+event.target.value)}\n          step={1}\n          min={1}\n          max={10}\n        />\n      </div>\n\n      <div className=\"form__block\">\n        <label\n          htmlFor=\"step\"\n          className=\"form__block-lable\"\n        >\n          Step\n        </label>\n\n        <input\n          className=\"form__block-input\"\n          type=\"number\"\n          id=\"step\"\n          value={step}\n          onChange={(event) => setStep(+event.target.value)}\n          step={1}\n          min={1}\n          max={10}\n        />\n      </div>\n\n      <div className=\"form__block\">\n        <label\n          className=\"form__block-lable\"\n          htmlFor=\"animationDuration\"\n        >\n          Animation Duratation\n        </label>\n\n        <input\n          className=\"form__block-input\"\n          type=\"number\"\n          id=\"animationDuration\"\n          value={animationDuration}\n          onChange={(event) => setAnimationDuration(+event.target.value)}\n          step={100}\n          min={100}\n          max={10000}\n        />\n      </div>\n\n      <div className=\"form__block\">\n        <label\n          htmlFor=\"infinity\"\n          className=\"form__block-lable\"\n        >\n          Infinity\n        </label>\n\n        <input\n          className=\"form__block-input\"\n          type=\"checkbox\"\n          id=\"infinity\"\n          checked={infinity}\n          onChange={handleCheckboxChange}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  imageSize: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  imageSize,\n  frameSize,\n  step,\n  animationDuration,\n  infinity,\n}) => {\n  const carouselSize = imageSize * frameSize;\n  const lastItem = images.length - frameSize;\n  const [moveItems, setMoveItems] = useState(0);\n\n  useEffect(() => {\n    if (moveItems > lastItem) {\n      setMoveItems(lastItem);\n    }\n  }, [frameSize]);\n\n  const handleMoveRight = () => {\n    const remainingItems = images.length - (moveItems + frameSize);\n\n    if (infinity && lastItem <= moveItems) {\n      setMoveItems(0);\n    }\n\n    setMoveItems(\n      (prevMoveRight) => prevMoveRight + Math.min(step, remainingItems),\n    );\n  };\n\n  const handleMoveLeft = () => {\n    if (infinity && moveItems === 0) {\n      setMoveItems(images.length);\n    }\n\n    setMoveItems(\n      (prevMoveRight) => prevMoveRight - Math.min(step, prevMoveRight),\n    );\n  };\n\n  const disabledNext = moveItems === images.length - frameSize;\n  const disabledPrev = moveItems === 0;\n\n  return (\n    <div\n      className=\"carousel\"\n      style={{\n        width: `${carouselSize}px`,\n        height: `${imageSize}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"carousel__list\">\n        {images.map(image => (\n          <li\n            style={{\n              transition: `transform ${animationDuration}ms ease`,\n              transform: `translateX(-${moveItems * imageSize}px)`,\n            }}\n            className=\"carousel__item\"\n          >\n\n            <img\n              className=\"carousel__img\"\n              src={image}\n              alt={image}\n              style={{\n                width: `${imageSize}px`,\n                height: `${imageSize}px`,\n                transition: `${animationDuration}ms`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"button__box\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            { 'button--disabled': disabledPrev && !infinity },\n          )}\n          onClick={handleMoveLeft}\n          style={{\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          &#11176;\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            { 'button--disabled': disabledNext && !infinity },\n          )}\n          data-cy=\"next\"\n          onClick={handleMoveRight}\n          style={{\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          &#11177;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { Form } from './components/Form/Form';\nimport { Carousel } from './components/Carousel/Carousel';\n\nconst images: string[] = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC<{}> = () => {\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinity, setInfiity] = useState(false);\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 data-cy=\"title\" className=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Form\n          imageSize={itemWidth}\n          setImageSize={setItemWidth}\n          frameSize={frameSize}\n          setFrameSize={setFrameSize}\n          step={step}\n          setStep={setStep}\n          animationDuration={animationDuration}\n          setAnimationDuration={setAnimationDuration}\n          infinity={infinity}\n          setInfiity={setInfiity}\n        />\n\n        <Carousel\n          images={images}\n          imageSize={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}